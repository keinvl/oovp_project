/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import java.sql.*;
import javax.xml.crypto.Data;
import net.proteanit.sql.DbUtils;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ASUS
 */
public class AdminProduct extends javax.swing.JPanel {
    
    Connection conn = null;
    ResultSet res = null;
    PreparedStatement prep = null;
    /**
     * Creates new form AdminProduct
     */
    public AdminProduct() {
        initComponents();
        connect();
        display();
        loadCategories();
    }
    
    private void connect() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/oovpproject";
            String username = "root";
            String password = "";
            conn = DriverManager.getConnection(url, username, password);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Connection failed: " + e.getMessage());
            System.exit(0);
        }
    }
    
    private void display() {
        try {
            String sql = "SELECT p.id, p.name, p.description, p.stock, p.price, p.category_id, c.name AS category_name " +
                         "FROM product p JOIN category c ON p.category_id = c.id";
            prep = conn.prepareStatement(sql);
            res = prep.executeQuery();
            tableProduct.setModel(DbUtils.resultSetToTableModel(res));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void loadCategories() {
        try {
            String sql = "Select id, name FROM category";
            prep = conn.prepareStatement(sql);
            res = prep.executeQuery();
            while (res.next()) {
                comboCategory.addItem(res.getString("name"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Failed to load categories");
        }
    }
    
    private void clear() {
        textName.setText(null);
        textDesc.setText(null);
        textStock.setText(null);
        textPrice.setText(null);
        comboCategory.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textDesc = new javax.swing.JTextField();
        textStock = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        textPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        comboCategory = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProduct = new javax.swing.JTable();

        jLabel7.setText("jLabel7");

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Perpetua", 1, 24)); // NOI18N
        jLabel1.setText("Product Management");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Name");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Description");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Stock");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Price");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Category");

        btnSave.setBackground(new java.awt.Color(185, 178, 138));
        btnSave.setText("Save");
        btnSave.setBorderPainted(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(185, 178, 138));
        btnUpdate.setText("Update");
        btnUpdate.setBorderPainted(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(185, 178, 138));
        btnClear.setText("Clear");
        btnClear.setBorderPainted(false);
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(248, 243, 217));
        btnDelete.setText("Delete");
        btnDelete.setBorderPainted(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tableProduct.setBackground(new java.awt.Color(248, 243, 217));
        tableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Description", "Stock", "Price", "Category_ID", "Category_Name"
            }
        ));
        tableProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableProduct);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(textStock, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textDesc, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel2)))
                                .addGap(71, 71, 71)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnSave)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnUpdate)
                                        .addGap(12, 12, 12)
                                        .addComponent(btnClear)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnDelete))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addComponent(comboCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(textPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(221, 221, 221))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave)
                            .addComponent(btnUpdate)
                            .addComponent(btnClear)
                            .addComponent(btnDelete))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String name = textName.getText();
        String desc = textDesc.getText();
        String stockStr = textStock.getText().trim();
        String priceStr = textPrice.getText().trim();
        
        if (name.isEmpty() || stockStr.isEmpty() || priceStr.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please fill in all fields.");
                return;
            }
        
        try {
            int stock = Integer.parseInt(stockStr);
            double price = Double.parseDouble(priceStr);
            
            if (stock <= 0) {
                JOptionPane.showMessageDialog(null, "Stock must be greater than 0.");
                return;
            }
            
            if (price <= 0) {
                JOptionPane.showMessageDialog(null, "Price must be greater than 0.");
                return;
            }
           
            String categoryName = comboCategory.getSelectedItem().toString();
            
            String sqlCategoryId = "SELECT id FROM category WHERE name = ?";
            prep = conn.prepareStatement(sqlCategoryId);
            prep.setString(1, categoryName);
            res = prep.executeQuery();
            res.next();
            int categoryId = res.getInt("id");
            
            String checkSql = "SELECT COUNT(*) FROM product WHERE name = ?";
            prep = conn.prepareStatement(checkSql);
            prep.setString(1, name);
            res = prep.executeQuery();
            res.next();
            int count = res.getInt(1);

            if (count > 0) {
                JOptionPane.showMessageDialog(null, "A product with this name already exists.");
                return;
            }
            
            String sql = "INSERT INTO product (name, description, stock, price, category_id) VALUES (?, ?, ?, ?, ?)";
            prep = conn.prepareStatement(sql);
            prep.setString(1, name);
            prep.setString(2, desc);
            prep.setInt(3, stock);
            prep.setDouble(4, price);
            prep.setInt(5, categoryId);
            prep.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "Successfully saved the product!");
            display();
            clear();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Unable to save the product: " + e.getMessage());
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int row = tableProduct.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please select a product to update.");
            return;
        }
        
        try {
            String productId = tableProduct.getValueAt(row, 0).toString();
            String name = textName.getText();
            String desc = textDesc.getText();
            int stock = Integer.parseInt(textStock.getText());
            double price = Double.parseDouble(textPrice.getText());
            String categoryName = comboCategory.getSelectedItem().toString();
            
            String checkSql = "SELECT COUNT(*) FROM product WHERE name = ? AND id != ?";
            prep = conn.prepareStatement(checkSql);
            prep.setString(1, name);
            prep.setString(2, productId);  
            res = prep.executeQuery();
            res.next();
            int count = res.getInt(1);

            if (count > 0) {
                JOptionPane.showMessageDialog(this, "A product with this name already exists.");
                return;
            }
            
            String sqlCategoryId = "SELECT id FROM category WHERE name = ?";
            prep = conn.prepareStatement(sqlCategoryId);
            prep.setString(1, categoryName);
            res = prep.executeQuery();
            res.next();
            int categoryId = res.getInt("id");
            
            String sql = "UPDATE product SET name = ?, description = ?, stock = ?, price = ?, category_id = ? WHERE id = ?";
            prep = conn.prepareStatement(sql);
            prep.setString(1, name);
            prep.setString(2, desc);
            prep.setInt(3, stock);
            prep.setDouble(4, price);
            prep.setInt(5, categoryId);
            prep.setString(6, productId);
            prep.executeUpdate();

            JOptionPane.showMessageDialog(this, "Product updated successfully.");
            display();
            clear();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Unable to save the product: " + e.getMessage());
        }       
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clear();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
       
        int row = tableProduct.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please select a product to delete.");
            return;
        }
        
        try {
            String productId = tableProduct.getValueAt(row, 0).toString();
            String sql = "DELETE FROM product WHERE id = ?";
            prep = conn.prepareStatement(sql);
            prep.setString(1, productId);
            prep.executeUpdate();

            JOptionPane.showMessageDialog(this, "Product deleted successfully.");
            display();
            clear();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Unable to delete the product: " + e.getMessage());
        }       
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tableProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProductMouseClicked
        int row = tableProduct.getSelectedRow();
        textName.setText(tableProduct.getValueAt(row, 1).toString());
        textDesc.setText(tableProduct.getValueAt(row, 2).toString());
        textStock.setText(tableProduct.getValueAt(row, 3).toString());
        textPrice.setText(tableProduct.getValueAt(row, 4).toString());
        comboCategory.setSelectedItem(tableProduct.getValueAt(row, 6).toString());
    }//GEN-LAST:event_tableProductMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comboCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableProduct;
    private javax.swing.JTextField textDesc;
    private javax.swing.JTextField textName;
    private javax.swing.JTextField textPrice;
    private javax.swing.JTextField textStock;
    // End of variables declaration//GEN-END:variables
}
